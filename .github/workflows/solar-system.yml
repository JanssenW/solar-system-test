name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
      
env:
  MONGO_URI: 'mongodb://root:solarsystem@localhost:27017/solar-system?authSource=admin'
jobs:
    unit-testing:
        name: Unit Testing
        strategy:
          matrix: 
            nodejs_version: [18, 19, 20]
            os: [ubuntu-latest, ubuntu-20.04]
            exclude: 
              - nodejs_version: 20
                os: ubuntu-20.04
        runs-on: ${{ matrix.os }}
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version - ${{ matrix.nodejs_version }}
          uses: actions/setup-node@v3
          with:
            node-version: ${{ matrix.nodejs_version }}
          
        - name: Get npm cache directory
          id: npm-cache-dir
          shell: bash
          run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
        
        - name: Cache NPM dependencies
          id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
          uses: actions/cache@v3
          with: 
            path: ${{ steps.npm-cache-dir.outputs.dir }}
            key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
            restore-keys: |
              ${{ runner.os }}-node-
    
        - name: Install Dependencies
          run: |
            npm install
            npm list --depth=0 | grep mocha
            npm list --depth=0 | grep mocha-junit-reporter
        
        - name: Setup Mongo Container
          run: docker compose -f mongo-docker-compose.yml up -d
    
        - name: Unit Testing
          continue-on-error: true
          run: |
            docker ps
            npm test

        - name: Print Unit Test Report
          continue-on-error: true
          run: |
            ls -lha
            ls -lha reports
            mv reports/test-results.xml reports/test-results-${{ matrix.os }}-${{ matrix.nodejs_version }}.xml
            cat reports/test-results-${{ matrix.os }}-${{ matrix.nodejs_version }}.xml
            ls -lha reports
          
        - name: Archive Unit Test Result
          uses: actions/upload-artifact@v4
          with:
            name: Mocha-Test-Result-${{ matrix.os }}-${{ matrix.nodejs_version }}.xml
            path: reports/test-results-${{ matrix.os }}-${{ matrix.nodejs_version }}.xml
            retention-days: 5


    code-coverage:
      name: Code Coverage
      strategy:
        matrix: 
          nodejs_version: [18, 19, 20]
          os: [ubuntu-latest, ubuntu-20.04]
          exclude: 
            - nodejs_version: 20
              os: ubuntu-20.04
      runs-on: ${{ matrix.os }}
      steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup NodeJS Version - ${{ matrix.nodejs_version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.nodejs_version }}
      
      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
      
      - name: Cache NPM dependencies
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        uses: actions/cache@v3
        with: 
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
  
      - name: Install Dependencies
        run: |
          npm install
      
      - name: Setup Mongo Container
        run: docker compose -f mongo-docker-compose.yml up -d
    
      - name: Check Code Coverage
        id: code-coverage-step
        run: npm run coverage || true

      - name: Print Code Coverage
        run: |
          ls -lha
          ls -lha coverage
          
      - name: Archive Code Coverage Test Result
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Code-Coverage-Result-${{ matrix.os }}-${{ matrix.nodejs_version }}
          path: coverage
          retention-days: 5